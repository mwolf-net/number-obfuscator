{"name":"Number-obfuscator","tagline":"A simple tool written with Ruby and TeX to randomly generate large arithmetic expressions for a given number","body":"number-obfuscator\r\n=================\r\n\r\n## What is it\r\n\r\nA simple tool written with Ruby and TeX to create large arithmetic expressions\r\nfor a given number, like this:\r\n\r\n![](sample-pictures/obfuscated-1.png \"relatively simple example\")\r\n\r\nor this:\r\n\r\n![](sample-pictures/obfuscated-2.png \"slightly more complex example\")\r\n\r\n[Here is an old blog post with more information.](http://mwolf.net/archive/number-obfuscator/).\r\n\r\n## How to use it\r\n\r\nThere's an on-line version [here](http://mwolf.net/code/obfuscator/obfuscate.html) where you can\r\nexperiment with it for yourself. It's currently on a self-hosted server, though, so please be\r\ngentle!\r\n\r\nAlternatively, you can fork the [git repo](https://github.com/mwolf-net/number-obfuscator) or\r\nsimply download the [zipfile](https://github.com/mwolf-net/number-obfuscator/archive/master.zip) and\r\nrun the script locally.\r\n\r\n### Prerequisites\r\n\r\nTo generate images with the script, you need to have *TeX* installed, plus the helper utilities\r\n*texi2dvi* and *dvipng*. On Ubuntu, you can install this with\r\n`sudo apt-get install texinfo texlive dvipng`.\r\n\r\n### Running the script\r\n\r\nThe basic command is\r\n\r\n    ruby number_obfuscator.rb [n] [d] [format]\r\n    \r\nwhere *n* is the number you want to obfuscate, *d* is the depth (try 3 for a fairly simple\r\nexpression, or 6 for a really nasty one) and *format* is either *tex* or *png*. If you don't specify\r\na format, the formula will be output as a Ruby expression. If you specify png, the file will be\r\nsaved as _obfuscated.png_.\r\n\r\nIn addition to invoking the script from the commandline, you can also load it from another Ruby\r\nscript, like this:\r\n\r\n    require './number_obfuscator'\r\n\r\n    e = Obfuscator.generate(n, d)\r\n    Obfuscator.makePNG(e, 'output.png')\r\n\r\nA separate CGI script, number_obfuscator_cgi.rb, is provided for running on a webserver. Once you have\r\nit running (which is outside the scope of this README file, sorry) it's just a matter of calling it\r\nwith a GET request, passing the *n* and *d* parameters, as demonstrated by the on-line demo linked to\r\nabove. Configuring your server to use *mod_ruby* is strongly recommended.\r\n\r\nThat's it, have fun! And please [let me know](https://github.com/mwolf-net/number-obfuscator/issues)\r\nif it doesn't work, or if you have any improvement suggestions..\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}